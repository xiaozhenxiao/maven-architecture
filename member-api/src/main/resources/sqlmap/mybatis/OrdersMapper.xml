<?xml version="1.0" encoding="UTF-8" ?>
<!--suppress ALL -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanyun.platform.member.api.dao.OrdersDao">
    <resultMap id="BaseResultMap" type="com.hanyun.platform.member.api.domain.Orders">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="order_id" property="orderId" jdbcType="VARCHAR"/>
        <result column="order_check_src" property="orderCheckSrc" jdbcType="TINYINT"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="brand_id" property="brandId" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
        <result column="order_type" property="orderType" jdbcType="VARCHAR"/>
        <result column="activity_id" property="activityId" jdbcType="VARCHAR"/>
        <result column="activity_name" property="activityName" jdbcType="VARCHAR"/>
        <result column="order_price" property="orderPrice" jdbcType="BIGINT"/>
        <result column="actual_price" property="actualPrice" jdbcType="BIGINT"/>
        <result column="pay_id" property="payId" jdbcType="VARCHAR"/>
        <result column="pay_type" property="payType" jdbcType="VARCHAR"/>
        <result column="pay_status" property="payStatus" jdbcType="VARCHAR"/>
        <result column="order_status" property="orderStatus" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, order_id, order_check_src,user_id, brand_id, store_id, order_type, activity_id, activity_name, order_price, actual_price, pay_id, pay_type, pay_status, order_status, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM orders
        WHERE id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectByUserId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from orders
		where user_id = #{userId,jdbcType=VARCHAR} and brand_id = #{brandId,jdbcType=VARCHAR}
		limit #{offset,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
	</select>
	<select id="selectUserCount" resultType="java.lang.Long">
		select count(id) 
		from orders
		where user_id = #{userId,jdbcType=VARCHAR} and brand_id = #{brandId,jdbcType=VARCHAR}
	</select>
	<select id="selectStatistics" resultType="java.util.HashMap" parameterType="java.lang.String">
		SELECT user_id AS userId,COUNT(*) AS times,SUM(order_price) AS total,AVG(order_price) AS single 
		FROM orders 
		WHERE brand_id = #{brandId,jdbcType=VARCHAR} GROUP BY user_id
	</select>
	<!-- 会员消费笔数 -->
	<select id="selectConsumTimes" resultType="java.lang.Long">
		SELECT COUNT(*) 
		FROM orders 
		WHERE brand_id = #{brandId,jdbcType=VARCHAR} AND user_id = #{userId,jdbcType=VARCHAR} 
		AND create_time &gt; #{startTime,jdbcType=TIMESTAMP} 
		AND create_time &lt; #{endTime,jdbcType=TIMESTAMP}
	</select>
	<!-- 店内总消费笔数 -->
	<select id="selectBrandConsumTimes" resultType="java.lang.Long">
		SELECT COUNT(*) 
		FROM orders 
		WHERE brand_id = #{brandId,jdbcType=VARCHAR} 
		AND create_time &gt; #{startTime,jdbcType=TIMESTAMP} 
		AND create_time &lt; #{endTime,jdbcType=TIMESTAMP}
	</select>
	<!-- 会员消费总额 -->
	<select id="selectConsumSum" resultType="java.lang.Long">
		SELECT SUM(order_price) 
		FROM orders 
		WHERE brand_id = #{brandId,jdbcType=VARCHAR} AND user_id = #{userId,jdbcType=VARCHAR}  
		AND create_time &gt; #{startTime,jdbcType=TIMESTAMP} 
		AND create_time &lt; #{endTime,jdbcType=TIMESTAMP}
	</select>
	<!-- 店内总消费额 -->
	<select id="selectBrandConsumSum" resultType="java.lang.Long">
		SELECT SUM(order_price) 
		FROM orders 
		WHERE brand_id = #{brandId,jdbcType=VARCHAR} 
		AND create_time &gt; #{startTime,jdbcType=TIMESTAMP} 
		AND create_time &lt; #{endTime,jdbcType=TIMESTAMP}
	</select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM orders
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.hanyun.platform.member.api.domain.Orders">
        INSERT INTO orders (id, order_id, order_check_src, user_id, brand_id, store_id, order_type, activity_id,
            activity_name, order_price, actual_price, pay_id, pay_type, pay_status, order_status, 
            create_time, update_time)
        VALUES (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR}, #{orderCheckSrc,jdbcType=TINYINT}, #{userId,jdbcType=VARCHAR}, #{brandId,jdbcType=VARCHAR}, #{storeId,jdbcType=VARCHAR}, #{orderType,jdbcType=VARCHAR}, #{activityId,jdbcType=VARCHAR},
            #{activityName,jdbcType=VARCHAR}, #{orderPrice,jdbcType=BIGINT}, #{actualPrice,jdbcType=BIGINT}, #{payId,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR}, 
            #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.hanyun.platform.member.api.domain.Orders">
        INSERT INTO orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderId != null">
                order_id,
            </if><if test="orderCheckSrc != null">
              order_check_src,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="brandId != null">
                brand_id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="orderType != null">
                order_type,
            </if>
            <if test="activityId != null">
                activity_id,
            </if>
            <if test="activityName != null">
                activity_name,
            </if>
            <if test="orderPrice != null">
                order_price,
            </if>
            <if test="actualPrice != null">
                actual_price,
            </if>
            <if test="payId != null">
                pay_id,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if><if test="orderCheckSrc != null">
                #{orderCheckSrc,jdbcType=TINYINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="brandId != null">
                #{brandId,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=VARCHAR},
            </if>
            <if test="orderType != null">
                #{orderType,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null">
                #{activityId,jdbcType=VARCHAR},
            </if>
            <if test="activityName != null">
                #{activityName,jdbcType=VARCHAR},
            </if>
            <if test="orderPrice != null">
                #{orderPrice,jdbcType=BIGINT},
            </if>
            <if test="actualPrice != null">
                #{actualPrice,jdbcType=BIGINT},
            </if>
            <if test="payId != null">
                #{payId,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hanyun.platform.member.api.domain.Orders">
        UPDATE orders
        <set>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="brandId != null">
                brand_id = #{brandId,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=VARCHAR},
            </if>
            <if test="orderType != null">
                order_type = #{orderType,jdbcType=VARCHAR},
            </if>
            <if test="activityId != null">
                activity_id = #{activityId,jdbcType=VARCHAR},
            </if>
            <if test="activityName != null">
                activity_name = #{activityName,jdbcType=VARCHAR},
            </if>
            <if test="orderPrice != null">
                order_price = #{orderPrice,jdbcType=BIGINT},
            </if>
            <if test="actualPrice != null">
                actual_price = #{actualPrice,jdbcType=BIGINT},
            </if>
            <if test="payId != null">
                pay_id = #{payId,jdbcType=VARCHAR},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=VARCHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=VARCHAR},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hanyun.platform.member.api.domain.Orders">
        UPDATE orders
        SET order_id = #{orderId,jdbcType=VARCHAR},
            user_id = #{userId,jdbcType=VARCHAR},
            brand_id = #{brandId,jdbcType=VARCHAR},
            store_id = #{storeId,jdbcType=VARCHAR},
            order_type = #{orderType,jdbcType=VARCHAR},
            activity_id = #{activityId,jdbcType=VARCHAR},
            activity_name = #{activityName,jdbcType=VARCHAR},
            order_price = #{orderPrice,jdbcType=BIGINT},
            actual_price = #{actualPrice,jdbcType=BIGINT},
            pay_id = #{payId,jdbcType=VARCHAR},
            pay_type = #{payType,jdbcType=VARCHAR},
            pay_status = #{payStatus,jdbcType=VARCHAR},
            order_status = #{orderStatus,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=BIGINT}
    </update>
</mapper>