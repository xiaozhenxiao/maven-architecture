<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanyun.platform.member.api.dao.BrandMemberTypeDao">
	<resultMap id="BaseResultMap" type="com.hanyun.platform.member.api.domain.BrandMemberType">
		<result column="id" property="id" jdbcType="BIGINT" />
    	<result column="type_id" property="typeId" jdbcType="VARCHAR" />
    	<result column="brand_id" property="brandId" jdbcType="VARCHAR" />
    	<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, type_id, brand_id, name
	</sql>
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from brand_member_type
		where id = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByBrandId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from brand_member_type
		where brand_id = #{brandId,jdbcType=VARCHAR}
	</select>
	<select id="selectCount" resultType="java.lang.Long">
		select count(id) from brand_member_type
	</select>
	<!-- <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_rebate_plan
		where id = #{id,jdbcType=INTEGER}
	</delete>-->
	<insert id="insert" parameterType="com.hanyun.platform.member.api.domain.BrandMemberType" useGeneratedKeys="true" keyProperty="id">
		insert into brand_member_type (type_id, brand_id, name)
		values (
			#{typeId,jdbcType=VARCHAR},
			#{brandId,jdbcType=VARCHAR},
			#{name,jdbcType=VARCHAR}
		)
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
			SELECT @@IDENTITY
		</selectKey>
	</insert>
	<insert id="insertSelective" parameterType="com.hanyun.platform.member.api.domain.BrandMemberType">
		insert into brand_member_type
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="typeId != null">
				type_id,
			</if>
			<if test="brandId != null">
				brand_id,
			</if>
			<if test="name != null">
				name
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="typeId != null">
				#{typeId,jdbcType=VARCHAR},
			</if>
			<if test="brandId != null">
				#{brandId,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
		</trim>
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
			SELECT @@IDENTITY
		</selectKey>
	</insert>
	<update id="updateByIdSelective" parameterType="com.hanyun.platform.member.api.domain.BrandMemberType">
		update brand_member_type
		<set>
			<if test="typeId != null">
				type_id = #{typeId,jdbcType=VARCHAR},
			</if>
			<if test="brandId != null">
				brand_id = #{brandId,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR}
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- <update id="updateByPrimaryKey" parameterType="cn.com.gome.rebate.model.persist.plan.RebatePlanPo">
		update t_rebate_plan
		set descrition = #{descrition,jdbcType=VARCHAR},
		plan_type = #{planType,jdbcType=TINYINT},
		name = #{name,jdbcType=VARCHAR},
		merchant_scopes = #{merchantScopes,jdbcType=VARCHAR},
		flow = #{flow,jdbcType=TINYINT},
		valid_start_time = #{validStartTime,jdbcType=TIMESTAMP},
		valid_end_time = #{validEndTime,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=TINYINT},
		inactive_time = #{inactiveTime,jdbcType=TIMESTAMP},
		active_time = #{activeTime,jdbcType=TIMESTAMP},
		approval_time = #{approvalTime,jdbcType=TIMESTAMP},
		calc_node =
		#{calcNode,jdbcType=INTEGER},
		thaw_node = #{thawNode,jdbcType=INTEGER},
		rebate_context = #{rebateContext,jdbcType=INTEGER},
		exclusive_id = #{exclusiveId,jdbcType=VARCHAR},
		ratios =
		#{ratios,jdbcType=VARCHAR},
		pull_levels = #{pullLevels,jdbcType=VARCHAR},
		rebate_level = #{rebateLevel,jdbcType=TINYINT},
		rebate_ratio = #{rebateRatio,jdbcType=TINYINT},
		role_ratio =
		#{roleRatio,jdbcType=VARCHAR},
		order_type = #{orderType,jdbcType=VARCHAR},
		sub_valid_day = #{subValidDay,jdbcType=TINYINT},
		estimate_amount = #{estimateAmount,jdbcType=BIGINT},
		estimate_no =
		#{estimateNo,jdbcType=VARCHAR},
		gome_id = #{userId,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update> -->

	<!--此处是自定义方法分割线 -->
	
</mapper>